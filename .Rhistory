ggplot(aes(x=ordered, y=beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free", drop = TRUE) +
scale_x_discrete(labels = setNames(lyrics.top.terms$term, lyrics.top.terms$ordered)) +
coord_flip()
lyrics.top.terms %>%
ggplot(aes(x=ordered, y=beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free", drop = TRUE) +
scale_x_discrete(labels = setNames(lyrics.top.terms$term, lyrics.top.terms$ordered)) +
coord_flip()
lyrics.top.terms <- lyrics.tidy.topics %>%
mutate_if(is.factor, as.character) %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(beta) %>%
mutate(ordered = paste(topic, beta) %>%
forcats::fct_inorder())
lyrics.top.terms %>%
ggplot(aes(x=ordered, y=beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free", drop = TRUE) +
scale_x_discrete(labels = setNames(lyrics.top.terms$term, lyrics.top.terms$ordered)) +
coord_flip()
lyrics.tidy %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
acast(word ~ sentiment, value.var = "n", fill = 0 ) %>%
comparison.cloud(colors = c("purple1" , "royalblue"))
nrc.word.counts <- lyrics.tidy %>%
inner_join(get_sentiments("nrc")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup() %>%
group_by(sentiment)  %>%
top_n(10)  %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales="free_y") +
labs(y = "contribution to sentiment", x = NULL) + coord_flip()
nrc.word.counts
nrc.decade.plot  %>%
ggplot(aes(row, percent, fill=factor(decade))) + geom_col(show.legend = FALSE) + facet_wrap(~decade, scales ="free_y", drop = TRUE) + scale_x_continuous(breaks = nrc.decade.plot$row, labels = nrc.decade.plot$sentiment ) + coord_flip()
bing.word.counts
#Visualize sentiment by song separated by decade
ggplot(lyrics.sentiment, aes(Song, sentiment, fill = decade)) + geom_col(show.legend = FALSE) + facet_wrap(~decade, ncol = 2, scales ="free_x") + theme(axis.text.x = element_blank())
#Visualize mean sentiment score by decade
ggplot(lyrics.sentiment, aes(decade, sentiment, fill = decade)) + stat_summary(fun.y = "mean", geom = "bar")
#Visualize sentiment by song separated by decade
ggplot(lyrics.sentiment, aes(Song, sentiment, fill = decade)) + geom_col(show.legend = FALSE) + facet_wrap(~decade, ncol = 2, scales ="free_x") + theme(axis.text.x = element_blank())
lyrics.sentiment.bing
lyrics.sentiment.bing <- lyrics.tidy %>%
inner_join(get_sentiments("bing")) %>%
count(Song, Year, decade, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative) #%>%
lyrics.sentiment.bing
lyrics.sentiment.bing %>%
filter(decade == 2010) %>%
group_by(sentiment) %>%
top_n(5)
lyrics.sentiment.bing %>%
filter(decade == 2010)
lyrics.sentiment.bing %>%
filter(decade == "2010's") %>%
group_by(sentiment) %>%
top_n(5)
lyrics.sentiment.bing %>%
filter(decade == "2010's")
lyrics <- lyrics %>%
mutate(decade =
ifelse(lyrics$Year %in% 1965:1969, "1960s",
ifelse(lyrics$Year %in% 1970:1979, "1970s",
ifelse(lyrics$Year %in% 1980:1999, "1980s",
ifelse(lyrics$Year %in% 1990:1999, "1990s",
ifelse(lyrics$Year %in% 2000:2009, "2000s",
ifelse(lyrics$Year %in% 2010:2015, "2010s",
"NA"
)))))))
#pull out extreme songs from 2010's
lyrics.sentiment.bing %>%
filter(decade == 2010s) %>%
group_by(sentiment) %>%
top_n(5)
lyrics.sentiment.bing %>%
filter(decade == '2010s') %>%
group_by(sentiment) %>%
top_n(5)
lyrics.sentiment.bing %>%
filter(decade == `2010s``) %>%
group_by(sentiment) %>%
top_n(5)
lyrics.sentiment.bing %>%
filter(decade == `2010s`) %>%
group_by(sentiment) %>%
top_n(5)
lyrics.sentiment.bing %>%
filter(decade = `2010s`) %>%
group_by(sentiment) %>%
top_n(5)
lyrics.sentiment.bing %>%
filter(Year == 2014 | Year == 2013 | Year == 2012 | Year == 2011 | Year == 2010) %>%
group_by(sentiment) %>%
top_n(5)
lyrics.sentiment.bing %>%
filter(Year == 2014 | Year == 2013 | Year == 2012 | Year == 2011 | Year == 2010)
lyrics.sentiment.bing %>%
filter(Year == 2014 | Year == 2013 | Year == 2012 | Year == 2011 | Year == 2010) %>%
order(abs(sentiment))
lyrics.sentiment.bing %>%
filter(Year == 2014 | Year == 2013 | Year == 2012 | Year == 2011 | Year == 2010) %>%
order(sentiment)
lyrics.sentiment.bing %>%
filter(Year == 2014 | Year == 2013 | Year == 2012 | Year == 2011 | Year == 2010) %>%
sort(sentiment)
lyrics.sentiment.bing %>%
filter(Year == 2014 | Year == 2013 | Year == 2012 | Year == 2011 | Year == 2010) %>%
group_by(sentiment)
lyrics.sentiment.bing %>%
filter(Year == 2014 | Year == 2013 | Year == 2012 | Year == 2011 | Year == 2010) %>%
group_by(sentiment) %>%
top_n(5)
lyrics.sentiment.bing %>%
filter(Year == 2014 | Year == 2013 | Year == 2012 | Year == 2011 | Year == 2010) %>%
arrange(sentiment)
lyrics$Song == "shakeitoff"
lyrics %>% filter(song == "shake it off")
lyrics %>% filter(Song == "shake it off")
lyrics.sentiment.bing %>%
filter(Year == 2014 | Year == 2013 | Year == 2012 | Year == 2011 | Year == 2010) %>%
arrange(sentiment)
lyrics.sentiment.bing %>%
filter(Year == 2014 | Year == 2013 | Year == 2012 | Year == 2011 | Year == 2010) %>%
arrange(abs(sentiment))
lyrics.sentiment.bing %>%
filter(Year == 2014 | Year == 2013 | Year == 2012 | Year == 2011 | Year == 2010) %>%
arrange(-abs(sentiment))
lyrics %>% filter(Song == "shake it off")
lyrics$Lyrics %>% filter(Song == "shake it off")
View(lyrics$Lyrics %>% filter(Song == "shake it off"))
View(lyrics %>% filter(Song == "shake it off")
)
test <- lyrics %>% filter(Song == "shake it off")
test$Lyrics
lyrics.sentiment.bing %>%
filter(Year == 2014 | Year == 2013 | Year == 2012 | Year == 2011 | Year == 2010) %>%
arrange(-abs(sentiment))
lyrics.sentiment.bing %>%
filter(Year == 2014 | Year == 2013 | Year == 2012 | Year == 2011 | Year == 2010) %>%
arrange(-abs(sentiment)) %>%
top_n(2)
lyrics.sentiment.bing %>%
filter(Year == 2014 | Year == 2013 | Year == 2012 | Year == 2011 | Year == 2010) %>%
arrange(-abs(sentiment)) %>%
slice(2)
lyrics.sentiment.bing %>%
filter(Year == 2014 | Year == 2013 | Year == 2012 | Year == 2011 | Year == 2010) %>%
arrange(-abs(sentiment)) %>%
slice(3)
lyrics.sentiment.bing %>%
filter(Year == 2014 | Year == 2013 | Year == 2012 | Year == 2011 | Year == 2010) %>%
arrange(-abs(sentiment)) %>%
slice(1:2)
#render your sweet site.
rmarkdown::render_site()
lyrics.tidy %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
acast(word ~ sentiment, value.var = "n", fill = 0 ) %>%
comparison.cloud(colors = c("purple1" , "royalblue"))
#Visualize NRC sentiment by song separated by decade
ggplot(lyrics.sentiment.NRC, aes(Song, sentiment, fill = decade)) + geom_col(show.legend = FALSE) + facet_wrap(~decade, ncol = 2, scales ="free_x") + theme(axis.text.x = element_blank())
#Visualize NRC mean sentiment score by decade
ggplot(lyrics.sentiment.NRC, aes(decade, sentiment, fill = decade)) + stat_summary(fun.y = "mean", geom = "bar")
nrc.word.counts
bing.word.counts
bing.word.counts <- lyrics.tidy %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup() %>%
group_by(sentiment)  %>%
top_n(20)  %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales="free_y") +
labs(y = "contribution to sentiment", x = NULL) + coord_flip()
bing.word.counts
bing.word.counts <- lyrics.tidy %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup() %>%
group_by(sentiment)  %>%
top_n(15)  %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales="free_y") +
labs(y = "contribution to sentiment", x = NULL) + coord_flip()
bing.word.counts
bing.word.counts <- lyrics.tidy %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup() %>%
group_by(sentiment) %>%
top_n(15)  %>%
ungroup() %>%
mutate(word = reorder(word, n))
bing.word.counts
bing.word.counts <- lyrics.tidy %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE)
bing.word.counts
bing.word.counts <- lyrics.tidy %>%
inner_join(get_sentiments("bing"))
bing.word.counts
bing.word.counts <- lyrics.tidy %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup() %>%
group_by(sentiment) %>%
top_n(15)  %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales="free_y") +
labs(y = "Number of times the word is used", x = NULL) + coord_flip()
bing.word.counts
nrc.decade.plot  %>%
ggplot(aes(row, percent, fill=factor(decade))) + geom_col(show.legend = FALSE) + facet_wrap(~decade, scales ="free_y", drop = TRUE) + scale_x_continuous(breaks = nrc.decade.plot$row, labels = nrc.decade.plot$sentiment ) + coord_flip()
lyrics.trigrams <- lyrics %>%
mutate_if(is.factor, as.character) %>%
unnest_tokens(bigram, Lyrics, token ="ngrams" , n = 3) %>%
separate(bigram, c("word1", "word2", "word3"), sep = " ") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
filter(!word3 %in% stop_words$word) %>%
filter(word1 != word2) %>%
filter(word2 != word3) %>%
unite(bigram, word1, word2, word3, sep= " ") %>%
inner_join(lyrics) %>%
count(bigram, decade, sort = TRUE) %>%
group_by(decade) %>%
top_n(10, n) %>%
ungroup() %>%
arrange(decade, n) %>%
mutate(row = row_number())
lyrics.trigrams %>%
ggplot(aes(row, n, fill = factor(decade))) + geom_col(show.legend= FALSE) + facet_wrap(~decade, scales = "free_y") + scale_x_continuous(breaks = lyrics.trigrams$row, labels = lyrics.trigrams$bigram) + coord_flip()
lyrics.grams <- lyrics %>%
mutate_if(is.factor, as.character) %>%
unnest_tokens(bigram, Lyrics, token ="ngrams" , n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
#filter(!word3 %in% stop_words$word) %>%
filter(word1 != word2) %>%
#filter(word2 != word3) %>%
unite(bigram, word1, word2, sep= " ") %>%
inner_join(lyrics) %>%
count(bigram, decade, sort = TRUE) %>%
group_by(decade) %>%
top_n(10, n) %>%
ungroup() %>%
arrange(decade, n) %>%
mutate(row = row_number())
lyrics.grams %>%
ggplot(aes(row, n, fill = factor(decade))) + geom_col(show.legend= FALSE) + facet_wrap(~decade, scales = "free_y") + scale_x_continuous(breaks = lyrics.trigrams$row, labels = lyrics.trigrams$bigram) + coord_flip()
lyrics.grams %>%
ggplot(aes(row, n, fill = factor(decade))) + geom_col(show.legend= FALSE) + facet_wrap(~decade, scales = "free_y") + scale_x_continuous(breaks = lyrics.grams$row, labels = lyrics.grams$bigram) + coord_flip()
lyrics.grams <- lyrics %>%
mutate_if(is.factor, as.character) %>%
unnest_tokens(bigram, Lyrics, token ="ngrams" , n = 3) %>%
separate(bigram, c("word1", "word2", "word3"), sep = " ") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
filter(!word3 %in% stop_words$word) %>%
filter(word1 != word2) %>%
filter(word2 != word3) %>%
filter(word1 != word3) %>%
unite(bigram, word1, word2, sep= " ") %>%
inner_join(lyrics) %>%
count(bigram, decade, sort = TRUE) %>%
group_by(decade) %>%
top_n(10, n) %>%
ungroup() %>%
arrange(decade, n) %>%
mutate(row = row_number())
lyrics.grams %>%
ggplot(aes(row, n, fill = factor(decade))) + geom_col(show.legend= FALSE) + facet_wrap(~decade, scales = "free_y") + scale_x_continuous(breaks = lyrics.grams$row, labels = lyrics.grams$bigram) + coord_flip()
lyrics.grams <- lyrics %>%
mutate_if(is.factor, as.character) %>%
unnest_tokens(bigram, Lyrics, token ="ngrams" , n = 3) %>%
separate(bigram, c("word1", "word2", "word3"), sep = " ") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
filter(!word3 %in% stop_words$word) %>%
filter(word1 != word2) %>%
filter(word2 != word3) %>%
filter(word1 != word3) %>%
unite(bigram, word1, word2, word3, sep= " ") %>%
inner_join(lyrics) %>%
count(bigram, decade, sort = TRUE) %>%
group_by(decade) %>%
top_n(10, n) %>%
ungroup() %>%
arrange(decade, n) %>%
mutate(row = row_number())
lyrics.grams %>%
ggplot(aes(row, n, fill = factor(decade))) + geom_col(show.legend= FALSE) + facet_wrap(~decade, scales = "free_y") + scale_x_continuous(breaks = lyrics.grams$row, labels = lyrics.grams$bigram) + coord_flip()
lyrics.sentiment.bing %>%
filter(decade == `2010s`)
#filter(Year == 2014 | Year == 2013 | Year == 2012 | Year == 2011 | Year == 2010) %>%
arrange(-abs(sentiment)) %>%
slice(1:2)
lyrics.sentiment.bing %>%
filter(decade == `2010s`) %>%
#filter(Year == 2014 | Year == 2013 | Year == 2012 | Year == 2011 | Year == 2010) %>%
arrange(-abs(sentiment)) %>%
slice(1:2)
lyrics$decade
lyrics.sentiment.bing %>%
filter(decade == `"2010s"`) %>%
#filter(Year == 2014 | Year == 2013 | Year == 2012 | Year == 2011 | Year == 2010) %>%
arrange(-abs(sentiment)) %>%
slice(1:2)
lyrics.sentiment.bing %>%
filter(decade == `2010s`)
lyrics.sentiment.bing
lyrics.sentiment.bing %>%
filter(decade == 2010s) %>%
#filter(Year == 2014 | Year == 2013 | Year == 2012 | Year == 2011 | Year == 2010) %>%
arrange(-abs(sentiment)) %>%
slice(1:2)
lyrics <- lyrics %>%
mutate(decade =
ifelse(lyrics$Year %in% 1965:1969, "1960",
ifelse(lyrics$Year %in% 1970:1979, "1970",
ifelse(lyrics$Year %in% 1980:1999, "1980",
ifelse(lyrics$Year %in% 1990:1999, "1990",
ifelse(lyrics$Year %in% 2000:2009, "2000",
ifelse(lyrics$Year %in% 2010:2015, "2010",
"NA"
)))))))
lyrics.tidy <- lyrics %>%
na.omit() %>%
unnest_tokens(word, Lyrics) #splits lyrics into separate words
lyrics.sentiment.bing %>%
filter(decade == 2010) %>%
#filter(Year == 2014 | Year == 2013 | Year == 2012 | Year == 2011 | Year == 2010) %>%
arrange(-abs(sentiment)) %>%
slice(1:2)
lyrics.sentiment.bing %>%
filter(decade == 2010)
lyrics.sentiment.bing
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("tidytext")
library("wordcloud")
library("reshape2")
library("topicmodels")
lyrics <- read_csv("/Users/gai7612/OneDrive/Documents/Data_Science_Project/pop music analysis/billboard_lyrics_1964-2015.csv")
# Chunk 2: lyrics
lyrics
# Chunk 3: tidyup
lyrics <- lyrics %>%
mutate(decade =
ifelse(lyrics$Year %in% 1965:1969, "1960",
ifelse(lyrics$Year %in% 1970:1979, "1970",
ifelse(lyrics$Year %in% 1980:1999, "1980",
ifelse(lyrics$Year %in% 1990:1999, "1990",
ifelse(lyrics$Year %in% 2000:2009, "2000",
ifelse(lyrics$Year %in% 2010:2015, "2010",
"NA"
)))))))
lyrics.tidy <- lyrics %>%
na.omit() %>%
unnest_tokens(word, Lyrics) #splits lyrics into separate words
# Chunk 4: wordcloud
lyrics.tidy %>%
anti_join(stop_words) %>% # removes stop words (and, the, etc.)
count(word) %>% # gives a count of how many times that word appears in the dataset
with(wordcloud(word, n, max.words = 200, color = "hotpink")) # makes a word cloud
# Chunk 5
lyrics.sentiment.bing <- lyrics.tidy %>%
inner_join(get_sentiments("bing")) %>%
count(Song, Year, decade, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
# Chunk 6
ggplot(lyrics.sentiment.bing, aes(decade, sentiment, fill = decade)) +
stat_summary(fun.y = "mean", geom = "bar")
# Chunk 7
ggplot(lyrics.sentiment.bing, aes(Song, sentiment, fill = decade)) +
geom_col(show.legend = FALSE) +
facet_wrap(~decade, ncol = 2, scales ="free_x") +
theme(axis.text.x = element_blank())
# Chunk 8
lyrics.sentiment.bing %>%
filter(decade == 2010) %>%
#filter(Year == 2014 | Year == 2013 | Year == 2012 | Year == 2011 | Year == 2010) %>%
arrange(-abs(sentiment)) %>%
slice(1:2)
# Chunk 9
lyrics.tidy %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
acast(word ~ sentiment, value.var = "n", fill = 0 ) %>%
comparison.cloud(colors = c("purple1" , "royalblue"))
# Chunk 10
bing.word.counts <- lyrics.tidy %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup() %>%
group_by(sentiment) %>%
top_n(15)  %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales="free_y") +
labs(y = "Number of times the word is used", x = NULL) + coord_flip()
bing.word.counts
# Chunk 11
lyrics.grams <- lyrics %>%
mutate_if(is.factor, as.character) %>%
unnest_tokens(bigram, Lyrics, token ="ngrams" , n = 3) %>%
separate(bigram, c("word1", "word2", "word3"), sep = " ") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
filter(!word3 %in% stop_words$word) %>%
filter(word1 != word2) %>%
filter(word2 != word3) %>%
filter(word1 != word3) %>%
unite(bigram, word1, word2, word3, sep= " ") %>%
inner_join(lyrics) %>%
count(bigram, decade, sort = TRUE) %>%
group_by(decade) %>%
top_n(10, n) %>%
ungroup() %>%
arrange(decade, n) %>%
mutate(row = row_number())
lyrics.grams %>%
ggplot(aes(row, n, fill = factor(decade))) +
geom_col(show.legend= FALSE) + facet_wrap(~decade, scales = "free_y") +
scale_x_continuous(breaks = lyrics.grams$row, labels = lyrics.grams$bigram) +
coord_flip()
lyrics.sentiment.bing %>%
filter(decade == 2010) %>%
#filter(Year == 2014 | Year == 2013 | Year == 2012 | Year == 2011 | Year == 2010) %>%
arrange(-abs(sentiment)) %>%
slice(1:2)
lyrics.sentiment.bing %>%
filter(decade == 2010)
lyrics.sentiment.bing %>%
filter(decade == 2010) %>%
#filter(Year == 2014 | Year == 2013 | Year == 2012 | Year == 2011 | Year == 2010) %>%
arrange(-abs(sentiment))
shiny::runApp('~/OneDrive/Documents/Data_Science_Project/effect size/EffectSize')
runApp('~/OneDrive/Documents/Data_Science_Project/avocados/avocados.R')
runApp('~/OneDrive/Documents/Data_Science_Project/avocados/avocados.R')
runApp('~/OneDrive/Documents/Data_Science_Project/avocados/avocados.R')
library(rsconnect)
rsconnect::deployApp('/Users/gai7612/OneDrive/Documents/Data Science Project/avocados/avocados.R')
library(rsconnect)
rsconnect::deployApp('/Users/gai7612/OneDrive/Documents/Data_Science_Project/avocados/avocados.R')
library(rsconnect)
rsconnect::deployApp('/Users/gai7612/OneDrive/Documents/Data_Science_Project/avocados')
runApp('~/OneDrive/Documents/Data_Science_Project/avocados/avocado_app')
runApp('~/OneDrive/Documents/Data_Science_Project/avocados/avocado_app')
rsconnect::deployApp('/Users/gai7612/OneDrive/Documents/Data_Science_Project/avocados/avocado_app')
rsconnect::deployApp('/Users/gai7612/OneDrive/Documents/Data_Science_Project/avocados/avocado_app')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
avo <- read_csv("avocados_conventional.csv")
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse"")
avo <- read_csv("avocados_conventional.csv")
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
avo <- read_csv("avocados_conventional.csv")
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
avo <- read_csv("/Users/gai7612/OneDrive/Documents/Data_Science_Project/avocados/avocado_app/avocados_conventional.csv")
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("tidytext")
library("wordcloud")
lyrics <- read_csv("/Users/gai7612/OneDrive/Documents/Data_Science_Project/pop music analysis/billboard_lyrics_1964-2015.csv")
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("tidytext")
avo <- read_csv("/Users/gai7612/OneDrive/Documents/Data_Science_Project/avocados/avocado_app/avocados_conventional.csv")
avo
#render your sweet site.
rmarkdown::render_site()
#render your sweet site.
rmarkdown::render_site()
#render your sweet site.
rmarkdown::render_site()
#render your sweet site.
rmarkdown::render_site()
#render your sweet site.
rmarkdown::render_site()
#render your sweet site.
rmarkdown::render_site()
